@page "/"
@inject Auth0Client _auth0Client
@inject IApiService _apiService
@using System.Security.Claims
@using System.Text.Json
@using System.Text.Json.Serialization
@using Auth0.OidcClient
@using ClimateSenseServices
@using Microsoft.IdentityModel.JsonWebTokens
@rendermode InteractiveServer
<PageTitle>Home</PageTitle>

@* <Dashboard @rendermode="InteractiveServer"/> *@
@* 
<AuthorizeView>
    <Authorized>
        <p>IsInRole: @_authenticationState?.User.IsInRole("rol_4V5SuiKlx7sqNTeB")</p>

        <pre >
            @JsonSerializer.Serialize(_authenticationState?.User, new JsonSerializerOptions()
            {
                ReferenceHandler = ReferenceHandler.Preserve,
                WriteIndented = true
            });
        </pre>
    </Authorized>
    <NotAuthorized>
        <p>Not authorized</p>
    </NotAuthorized>
</AuthorizeView>

 *@
@code{


    // [CascadingParameter]
    // public Task<AuthenticationState>? AuthentiationState { get; set; }

    // private AuthenticationState? _authenticationState;

    protected override async Task OnInitializedAsync()
    {
        var result = await _auth0Client.LoginAsync();
        var respone = _apiService.GetLocations(result.AccessToken);
        // if (AuthentiationState != null)
        // {
        //     _authenticationState = await AuthentiationState;
        //     StateHasChanged();
        // }

        await base.OnInitializedAsync();
    }

}
